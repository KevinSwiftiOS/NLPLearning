<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.hankcs.hanlp.tokenizer.StandardTokenizer"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.tokenizer.NLPTokenizer"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.tokenizer.IndexTokenizer"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.seg.NShort.NShortSegment"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.seg.Dijkstra.DijkstraSegment"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.seg.CRF.CRFSegment"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.tokenizer.SpeedTokenizer"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.dictionary.CustomDictionary"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.collection.AhoCorasick.AhoCorasickDoubleArrayTrie.IHit"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.collection.AhoCorasick.AhoCorasickDoubleArrayTrie"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.dictionary.CoreDictionary"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.dictionary.CoreDictionary.Attribute"/>
<fullyQualifiedTypeName name="javax.swing.text.Segment"/>
<fullyQualifiedTypeName name="java.awt.List"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.seg.Segment"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.seg.common.Term"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.suggest.Suggester"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.mining.word2vec.WordVectorModel"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.mining.word2vec.DocVectorModel"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.corpus.dependency.CoNll.CoNLLSentence"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.corpus.dependency.CoNll.CoNLLWord"/>
<fullyQualifiedTypeName name="com.hankcs.hanlp.HanLP"/>
</qualifiedTypeNameHistroy>
